<h3>@Resources.PageLanguage.StrBestSales</h3>
<link href="/Content/style.css" rel="stylesheet" type="text/css" media="screen" />
<link href="/Content/base.css" rel="stylesheet" type="text/css" media="screen" />
<div class="pikachoose">
    <ul id="pikame">
        <li>
            <a href=""><img src="@Html.Action("GoodsImage", "Image", new { picName = "1.jpg" })" alt="" /></a>
            <span>
                Images by <a href="http://dlanham.com/" target="_blank">David Lanham</a> from <a target="_blank" href="http://iconfactory.com/home">The Icon Factory</a>
            </span>
        </li>
        <li>
            <a href=""><img src="@Html.Action("GoodsImage", "Image", new { picName = "2.jpg" })" alt="" /></a>
            <span>Use custom images or let PikaChoose create thumbs for you.</span>
        </li>
        <li>
            <a href=""><img src="@Html.Action("GoodsImage", "Image", new { picName = "3.jpg" })" alt="" /></a>
            <span>Tested for IE7+ works smoothly and flawlessly!</span>
        </li>
        <li>
            <a href=""><img src="@Html.Action("GoodsImage", "Image", new { picName = "4.jpg" })" alt="" /></a>
            <span>It can't get any easier to use than PikaChoose!</span>
        </li>
    </ul>
</div>
<h3>关于本网站</h3>
<ol class="round">
    <li class="one">
        <h5>会员系统</h5>
        用户可以注册网站会员，登录后可以看到商品详情并且可以对商品发表评论。
    </li>

    <li class="two">
        <h5>商品系统</h5>
        用户可以在线浏览商品，查看商品描述，价格，图片等。<br />
        注册会员还可以在管理控制台发布新商品。<br />
        管理员可以发布新商品或者对现有商品进行修改。
    </li>

    <li class="three">
        <h5>评论系统</h5>
        登录后的用户可以对商品发表评论。
    </li>

    <li class="four">
        <h5>网站国际化</h5>
        本网站基于i18n标准，支持多语言。
    </li>

    <li class="five">
        <h5>ASP.NET MVC</h5>
        ASP.NET MVC 为你提供了一种用于生成动态网站的方式，
        该方式基于模式，十分强大，使你可以清晰地分离各种考虑因素，让你能够完全控制标记，
            以便进行灵活而有趣的开发。ASP.NET MVC 包括许多功能，你可以使用这些功能进行
            TDD 友好的快速开发，以创建使用
            最新 Web 标准的复杂应用程序。
    </li>

    <li class="six">
        <h5>Entity Framework</h5>
        ADO.NET Entity Framework 是微软以 ADO.NET 为基础所发展出来的对象关系对应 (O/R Mapping) 解决方案。
        Entity Framework 利用了抽象化数据结构的方式，将每个数据库对象都转换成应用程序对象 (entity)，
        而数据字段都转换为属性 (property)，关系则转换为结合属性 (association)，
        让数据库的 E/R 模型完全的转成对象模型，如此让程序设计师能用最熟悉的编程语言来调用访问。
        而在抽象化的结构之下，则是高度集成与对应结构的概念层、对应层和储存层，
        以及支持 Entity Framework 的数据提供者 (provider)，让数据访问的工作得以顺利与完整的进行。
    </li>
</ol>